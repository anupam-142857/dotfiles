set nocompatible              " be iMproved, required
filetype off                  " required


" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'junegunn/fzf'
Plugin 'preservim/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ycm-core/YouCompleteMe'
"Plugin 'tpope/vim-fugitive'
"Plugin 'vim-syntastic/syntastic'
Plugin 'flazz/vim-colorschemes'
Plugin 'puremourning/vimspector'
Plugin 'voldikss/vim-floaterm'
"Plugin 'terryma/vim-smooth-scroll'
Plugin 'vim-test/vim-test'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"set laststatus=2
set t_Co=256

highlight Cursor ctermfg=white ctermbg=black
highlight iCursor ctermfg=white ctermbg=black


set showtabline=2 " Always display the tabline, even if there is only one tab
set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)

set relativenumber
set number                    " show line numbers
set showcmd                   " show command in bottom bar
"set cursorline                " highlight current line

set wildmenu                  " visual autocomplete for command menu
set wildchar=<Tab> wildmenu wildmode=full
syntax enable
"colorscheme cobalt2
set background=dark
"set termguicolors
set splitright

set tabstop=2                 " number of visual spaces per tab
set shiftwidth=2
"set softtabstop=2            " number of spaces in tab when editing

set incsearch                 " search as characters are entered
set hlsearch                  " highlight matches
"set foldenable                " enable folding
"set foldlevelstart=10         " opens most folds by default
"set foldmethod=indent         " fold based on indent level

set ruler                     " always show current position
set lbr                       " Linebreak on 500 characters
"set tw=80                     " tw = text width

set ai                        " Auto indent
set si                        " Smart indent
set wrap                      " Wrap lines

set visualbell                " No sounds
set showmode                  " Show current mode at the bottom
set ignorecase                " Ignore case while searching
set mouse=a                   " Enable mouse
set clipboard=unnamed
set backspace=indent,eol,start

"packadd minpac
"call minpac#init()
"call minpac#add('vim-airline/vim-airline')
"call minpac#add('junegunn/fzf')
"call minpac#add('vim-airline/vim-airline-themes')

" fzf-mappings
nnoremap <C-p> :<C-u>FZF<CR>

" airline settings
set encoding=utf-8

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" powerline symbols
let g:airline_theme='powerlineish'
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.colnr = ' ℅:'
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ' :'
let g:airline_symbols.maxlinenr = '☰ '
let g:airline_symbols.dirty='⚡'
let g:airline_skip_empty_sections = 1

" enable powerline fonts
let g:airline_powerline_fonts=1

" enable tabline 
let g:airline#extensions#tabline#enabled=1
" filename only in tabline
let g:airline#extensions#tabline#fnamemod = ':t'

let g:airline#extensions#branch#enabled=1 " show branch
let g:airline_section_z = '%l:%c' " modify section Z


" nerdtree shortcut
nmap <C-n> :NERDTreeToggle<CR>


"Cursor settings:
" 0 -> blinkin block
" 1 -> blinking block (default)
" 2 -> steady block
" 3 -> blinking underscore
" 4 -> steady underscore
" 5 -> blinking vertical bar
" 6 -> steady vertical bar

"let &t_SI = \e[6 q" " insert mode
"let &t_EI = \e[2 q" " else

" vimspector settings
let g:vimspector_enable_mappings = 'HUMAN'
let g:vimspector_install_gadgets = [ 'debugpy', 'vscode-cpptools' ]

" Floaterm optionis
nmap <leader><F1> :FloatermNew<CR>

let g:floaterm_width=0.8
let g:floaterm_height=0.8
let g:floaterm_autoclose=1

"let g:syntastic_cpp_compiler='clang++'
"let g:syntastic_cpp_compiler_options=' -std=c++11 -stdlib=libc++'
"let g:syntastic_cpp_check_header=1
"let g:syntastic_debug=1
"let g:syntastic_cpp_checkers=['syntastic-cpp-clang_tidy', 'syntastic-cpp-clang_check']

" vim-test settings
" use python3 instead of python
let g:test#python#pytest#executable = 'python3 -m pytest'
